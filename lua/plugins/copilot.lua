local Utils = require("config.utils")

local M = {}

---@param kind string
-- function M.pick(kind)
--   return function()
--     local actions = require("CopilotChat.actions")
--     local items = actions[kind .. "_actions"]()
--     if not items then
--       LazyVim.warn("No " .. kind .. " found on the current line")
--       return
--     end
--     local ok = pcall(require, "fzf-lua")
--     require("CopilotChat.integrations." .. (ok and "fzflua" or "telescope")).pick(items)
--
--   end
-- end

return {
  -- {
  --   "zbirenbaum/copilot.lua",
  --   cmd = "Copilot",
  --   enabled=false,
  --   build = ":Copilot auth",
  --   event = "InsertEnter",
  --   opts = function()
  --     Utils.cmp.actions.ai_accept = function()
  --       if require("copilot.suggestion").is_visible() then
  --         Utils.create_undo()
  --         require("copilot.suggestion").accept()
  --         return true
  --       end
  --     end
  --
  --     local opts = {
  --       suggestion = {
  --         enabled = false,
  --         auto_trigger = true,
  --         keymap = {
  --           accept = false, -- handled by nvim-cmp / blink.cmp
  --           next = "<M-]>",
  --           prev = "<M-[>",
  --         },
  --       },
  --       panel = { enabled = false },
  --       filetypes = {
  --         markdown = true,
  --         help = true,
  --       },
  --     }
  --     return opts
  --   end,
  -- },
  -- {
  --   "CopilotC-Nvim/CopilotChat.nvim",
  --   branch = "main",
  --   enabled=false,
  --   cmd = "CopilotChat",
  --   opts = function()
  --     local user = vim.env.USER or "User"
  --     user = user:sub(1, 1):upper() .. user:sub(2)
  --     return {
  --       auto_insert_mode = true,
  --       question_header = "  " .. user .. " ",
  --       answer_header = "  Copilot ",
  --       window = {
  --         width = 0.4,
  --       },
  --     }
  --   end,
  --   keys = {
  --     { "<c-s>", "<CR>", ft = "copilot-chat", desc = "Submit Prompt", remap = true },
  --     { "<leader>a", "", desc = "+ai", mode = { "n", "v" } },
  --     {
  --       "<leader>aa",
  --       function()
  --         return require("CopilotChat").toggle()
  --       end,
  --       desc = "Toggle (CopilotChat)",
  --       mode = { "n", "v" },
  --     },
  --     {
  --       "<leader>ax",
  --       function()
  --         return require("CopilotChat").reset()
  --       end,
  --       desc = "Clear (CopilotChat)",
  --       mode = { "n", "v" },
  --     },
  --     {
  --       "<leader>aq",
  --       function()
  --         local input = vim.fn.input("Quick Chat: ")
  --         if input ~= "" then
  --           require("CopilotChat").ask(input)
  --         end
  --       end,
  --       desc = "Quick Chat (CopilotChat)",
  --       mode = { "n", "v" },
  --     },
  --     -- Show prompts actions with telescope
  --     { "<leader>ap", M.pick("prompt"), desc = "Prompt Actions (CopilotChat)", mode = { "n", "v" } },
  --   },
  --   config = function(_, opts)
  --     local chat = require("CopilotChat")
  --
  --     vim.api.nvim_create_autocmd("BufEnter", {
  --       pattern = "copilot-chat",
  --       callback = function()
  --         vim.opt_local.relativenumber = false
  --         vim.opt_local.number = false
  --       end,
  --     })
  --
  --     chat.setup(opts)
  --   end,
  -- },
}
